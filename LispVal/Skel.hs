module LispVal.Skel where

-- Haskell module generated by the BNF converter

import LispVal.Abs

transExp :: Exp -> Integer
transExp x = case x of
  EAdd exp1 exp2 -> transExp exp1 + transExp exp2
  ESub exp1 exp2 -> transExp exp1 - transExp exp2
  EMul exp1 exp2 -> transExp exp1 * transExp exp2
  EDiv exp1 exp2 -> transExp exp1 `div` transExp exp2
  EInt integer -> integer

