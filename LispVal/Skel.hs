module LispVal.Skel where

-- Haskell module generated by the BNF converter

import LispVal.Abs
import LispVal.ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident string -> failure x
transLispBool :: LispBool -> Result
transLispBool x = case x of
  LispBool string -> failure x
transLispNumber :: LispNumber -> Result
transLispNumber x = case x of
  LispNumber string -> failure x
transLispVal :: LispVal -> Result
transLispVal x = case x of
  Atom ident -> failure x
  String string -> failure x
  Number lispnumber -> failure x
  Bool lispbool -> failure x
  Nil -> failure x
  SExp lispvals -> failure x
  List lispvals -> failure x

