-- File generated by the BNF Converter (bnfc 2.9.3).

{-# LANGUAGE GeneralizedNewtypeDeriving #-}

-- | The abstract syntax of language LispVal.

module LispVal.Abs where

import Prelude (String)
import qualified Prelude as C (Eq, Ord, Show, Read)
import qualified Data.String

import qualified Data.Text

data Program = Prog [LispVal]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LispVal
    = Atom Ident
    | String String
    | Number LispNumber
    | Bool LispBool
    | Quote LispVal
    | List [LispVal]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

newtype Ident = Ident Data.Text.Text
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

newtype LispBool = LispBool Data.Text.Text
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

newtype LispNumber = LispNumber Data.Text.Text
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

