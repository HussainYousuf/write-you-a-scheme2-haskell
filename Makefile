## File generated by the BNF Converter (bnfc 2.9.3).

# Makefile for building the parser and test program.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : LispVal/Test

# Rules for building the parser.

LispVal/Abs.hs LispVal/Lex.x LispVal/Par.y LispVal/Print.hs LispVal/Test.hs : LispVal.cf
	bnfc --haskell -d --text-token LispVal.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

LispVal/Test : LispVal/Abs.hs LispVal/Lex.hs LispVal/Par.hs LispVal/Print.hs LispVal/Test.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f LispVal/*.hi LispVal/*.o LispVal/*.log LispVal/*.aux LispVal/*.dvi

distclean : clean
	-rm -f LispVal/Abs.hs LispVal/Abs.hs.bak LispVal/ComposOp.hs LispVal/ComposOp.hs.bak LispVal/Doc.txt LispVal/Doc.txt.bak LispVal/ErrM.hs LispVal/ErrM.hs.bak LispVal/Layout.hs LispVal/Layout.hs.bak LispVal/Lex.x LispVal/Lex.x.bak LispVal/Par.y LispVal/Par.y.bak LispVal/Print.hs LispVal/Print.hs.bak LispVal/Skel.hs LispVal/Skel.hs.bak LispVal/Test.hs LispVal/Test.hs.bak LispVal/XML.hs LispVal/XML.hs.bak LispVal/AST.agda LispVal/AST.agda.bak LispVal/Parser.agda LispVal/Parser.agda.bak LispVal/IOLib.agda LispVal/IOLib.agda.bak LispVal/Main.agda LispVal/Main.agda.bak LispVal/LispVal.dtd LispVal/LispVal.dtd.bak LispVal/Test LispVal/Lex.hs LispVal/Par.hs LispVal/Par.info LispVal/ParData.hs Makefile
	-rmdir -p LispVal/

# EOF
